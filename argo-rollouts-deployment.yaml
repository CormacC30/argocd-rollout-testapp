apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
    spec:
      serviceAccountName: argo-rollouts
      containers:
        - name: argo-rollouts
          image: quay.io/argoproj/argo-rollouts:latest
          imagePullPolicy: Always
        #  args:
        #    - --prometheus-address=https://prometheus-k8s.openshift-monitoring.svc.cluster.local:9091
        #    - --log-level=debug
          ports:
            - name: metrics
              containerPort: 8090
              protocol: TCP
            - name: healthz
              containerPort: 8080
              protocol: TCP
          env:
            - name: PROMETHEUS_BEARER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: prometheus-token
                  key: token
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 4
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: prometheus-token
              mountPath: /etc/prometheus
              readOnly: true
            - mountPath: /etc/prometheus-ca
              name: prometheus-ca-cert
              readonly: true
          args:
            - --metrics-endpoint=https://prometheus-k8s.openshift-monitoring.svc.cluster.local:9091
            - --ca-cert-path=/etc/prometheus-ca/ca.crt
      volumes:
        - name: prometheus-token
          secret:
            secretName: prometheus-token
        - name: prometheus-ca-cert
          configMap:
            name: prometheus-ca-cert
      dnsPolicy: ClusterFirst
